1.导包()
	--MyBatis 9个
	--ehcache 2个
	--Spring 14个
	--Mybatis和Spring整合包 1个
	--JSON 5个
	--Jackson 3个
	--Hibernate验证器 3个
	--mysql驱动包 1个
	--C3P0包 1个
2. 配置web.xml
	<!-- 2.1 注册Spring配置文件的位置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- 
			spring-db.xml	数据源
			spring-mybatis.xml	
			spring-service.xml	业务
			spring-tx.xml	事务
		 -->
		<param-value>classpath:resources/spring-*.xml</param-value>
	</context-param>
	<!-- 2.2 注册ServletContext监听器  -->
	<!-- 用于创建Spring容器对象放入ServletContext的域属性空间中，保证整个应用中的Spring容器唯一-->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<!-- 2.3 注册字符集过滤器  -->
	<!-- 用于解决请求参数中的中文乱码问题 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 2.4 配置中央调度器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:resources/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
3. 正式开发 
	3.1 定义实体类Student
		属性：
		private Integer id;
		private String name;
		private int age;
		生成getter和setter和toString
		1个参数为name和age的有参构造
		
	3.2 定义Student表
		| id | name | age|
	3.3 定义index页面
	3.4 定义处理器
		-处理器中包含serive接口对象
	3.5 定义Service接口和实现类
		-Service实现类包含dao接口对象
	3.6 定义dao接口和dao实现类
	3.7 配置dao的Mapper配置文件
	3.8 定义MyBatis的主配置文件
	3.9 定义jdbc.properties
	3.10 定义Spring的配置文件
		3.10.1 spring-db.xml
			注册数据源
			<!-- 1. 配置读取jdbc.properties文件 -->
			<!-- 2. 配置C3P0连接池 -->
		3.10.2 spring-mybatis.xml	
			<!-- 1. 注册SqlSessionFactoryBean -->
			<!-- 2. 注册Mapper扫描配置器 -->
		3.10.3 spring-service.xml
			<!-- 1. 注册service -->
			<!-- 为service注入dao属性的时候，采用的是mapper的名字（DAO的简单类名） -->
		3.10.4 spring-tx.xml
			<!-- 1. 配置事务管理器 -->
			<!-- 2. 注册事务通知 -->
			<!-- 3. aop配置 -->
	3.11 定义springmvc的配置文件
		-四大器：处理器，处理器映射器，处理器适配器，视图解析器
		<!-- 1.注册springmvc的处理器，注入spring-serivce.xml的studentService对象 -->
		<!-- 2.配置视图解析器 -->
	3.12 定义试图页面show.jsp
==========================================
以上部分完成了配置式的SSM框架整合开发
接下来改造成注解式：
1. 修改spring-mvc.xml
	<!-- 配置组件扫描器，注解式使用-->
	<!-- 配置注解驱动 -->
2. 修改处理器类，把service注入给处理器
	//注册为controller
	//配置父路径为/test
	//把studentSerive注入给setter
	//配置do方法路径
3. 修改spring-service.xml
	<!-- 配置扫描器 -->
4. 修改service实现类
	//service注册到spring容器
	//bytype方式自动注入 只需要写一个 @Autowired
	//byname方式，需要写 @Qualifier("IStudentDao")
	@Autowired
	@Qualifier("IStudentDao")
5. 修改spring-tx.xml
	<!-- 注解式驱动 -->
6. 修改service实现类	
	@Transactional
7. Mybatis不使用注解式开发

	


